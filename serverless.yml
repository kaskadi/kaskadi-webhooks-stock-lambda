service:
  name: kaskadi-webhooks-stock-lambda

package:
  individually: true
  exclude:
    - "**/**"

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service.name}-stack
  stage: ${opt:stage, 'prod'}
  region: eu-central-1
  deploymentBucket:
    name: kaskadi-serverless-deployment-bucket
  apiGateway:
    restApiId: !ImportValue KaskadiWebhooksRestAPIGatewayId
    restApiRootResourceId: !ImportValue KaskadiWebhooksRestAPIGatewayRootResourceId

layers:
  KaskadiWebhooksStockLayer:
    path: layer
    name: ${self:service.name}-layer
    description: Layer for ${self:service.name}
    compatibleRuntimes:
      - nodejs10.x
      - nodejs12.x
    licenseInfo: MIT
    package:
      include:
        - '**/**'

functions:
  KaskadiWebhooksStock:
    handler: kaskadi-webhooks-stock-lambda.handler
    layers:
      - { Ref: KaskadiWebhooksStockLayerLambdaLayer }
    name: ${self:service.name}
    package:
      include:
        - 'kaskadi-webhooks-stock-lambda.js'
    environment:
      ES_ID: ${env:ES_ID}
      ES_SECRET: ${env:ES_SECRET}
      ES_ENDPOINT: ${env:ES_ENDPOINT}
      YSWS_TOKEN: ${env:YSWS_TOKEN}
    events:
      - http:
          method: post
          path: stock
          cors: true
